{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sohla\\\\Documents\\\\Web Projects\\\\Travel-Guide\\\\src\\\\components\\\\MapChart.js\",\n  _s = $RefreshSig$();\n// src/components/MapChart.js\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleCountry } from \"../redux/mapSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\nconst MapChart = () => {\n  _s();\n  const highlighted = useSelector(state => state.map.highlightedCountries);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const isHighlighted = highlighted.includes(geo.properties.ISO_A3);\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          onClick: () => dispatch(toggleCountry(geo.properties.ISO_A3)),\n          style: {\n            default: {\n              fill: isHighlighted ? \"#FF5722\" : \"#D6D6DA\",\n              outline: \"none\"\n            },\n            hover: {\n              fill: \"#F53\",\n              outline: \"none\"\n            },\n            pressed: {\n              fill: \"#E42\",\n              outline: \"none\"\n            }\n          }\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(MapChart, \"W7mXxU3ZW8a2TSODHLPGrTxzH9o=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MapChart;\nexport default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","useSelector","useDispatch","toggleCountry","jsxDEV","_jsxDEV","geoUrl","MapChart","_s","highlighted","state","map","highlightedCountries","dispatch","children","geography","geographies","geo","isHighlighted","includes","properties","ISO_A3","onClick","style","default","fill","outline","hover","pressed","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sohla/Documents/Web Projects/Travel-Guide/src/components/MapChart.js"],"sourcesContent":["// src/components/MapChart.js\r\nimport React from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleCountry } from \"../redux/mapSlice\";\r\n\r\nconst geoUrl =\r\n  \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\r\n\r\nconst MapChart = () => {\r\n  const highlighted = useSelector((state) => state.map.highlightedCountries);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ComposableMap>\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => {\r\n            const isHighlighted = highlighted.includes(geo.properties.ISO_A3);\r\n            return (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                onClick={() =>\r\n                  dispatch(toggleCountry(geo.properties.ISO_A3))\r\n                }\r\n                style={{\r\n                  default: {\r\n                    fill: isHighlighted ? \"#FF5722\" : \"#D6D6DA\",\r\n                    outline: \"none\",\r\n                  },\r\n                  hover: {\r\n                    fill: \"#F53\",\r\n                    outline: \"none\",\r\n                  },\r\n                  pressed: {\r\n                    fill: \"#E42\",\r\n                    outline: \"none\",\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;AACzE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GACV,gEAAgE;AAElE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,WAAW,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,GAAG,CAACC,oBAAoB,CAAC;EAC1E,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,oBACEG,OAAA,CAACP,aAAa;IAAAgB,QAAA,eACZT,OAAA,CAACN,WAAW;MAACgB,SAAS,EAAET,MAAO;MAAAQ,QAAA,EAC5BA,CAAC;QAAEE;MAAY,CAAC,KACfA,WAAW,CAACL,GAAG,CAAEM,GAAG,IAAK;QACvB,MAAMC,aAAa,GAAGT,WAAW,CAACU,QAAQ,CAACF,GAAG,CAACG,UAAU,CAACC,MAAM,CAAC;QACjE,oBACEhB,OAAA,CAACL,SAAS;UAERe,SAAS,EAAEE,GAAI;UACfK,OAAO,EAAEA,CAAA,KACPT,QAAQ,CAACV,aAAa,CAACc,GAAG,CAACG,UAAU,CAACC,MAAM,CAAC,CAC9C;UACDE,KAAK,EAAE;YACLC,OAAO,EAAE;cACPC,IAAI,EAAEP,aAAa,GAAG,SAAS,GAAG,SAAS;cAC3CQ,OAAO,EAAE;YACX,CAAC;YACDC,KAAK,EAAE;cACLF,IAAI,EAAE,MAAM;cACZC,OAAO,EAAE;YACX,CAAC;YACDE,OAAO,EAAE;cACPH,IAAI,EAAE,MAAM;cACZC,OAAO,EAAE;YACX;UACF;QAAE,GAlBGT,GAAG,CAACY,MAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBhB,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACzB,EAAA,CAtCID,QAAQ;EAAA,QACQN,WAAW,EACdC,WAAW;AAAA;AAAAgC,EAAA,GAFxB3B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}