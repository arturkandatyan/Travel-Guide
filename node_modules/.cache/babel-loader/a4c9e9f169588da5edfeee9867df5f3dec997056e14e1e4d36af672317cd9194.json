{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst mapSlice = createSlice({\n  name: \"map\",\n  initialState: {\n    highlightedCountries: []\n  },\n  reducers: {\n    toggleCountry: (state, action) => {\n      const code = action.payload;\n      if (state.highlightedCountries.includes(code)) {\n        state.highlightedCountries = state.highlightedCountries.filter(c => c !== code);\n      } else {\n        state.highlightedCountries.push(code);\n      }\n    }\n  }\n});\nexport const {\n  toggleCountry\n} = mapSlice.actions;\nexport default mapSlice.reducer;","map":{"version":3,"names":["createSlice","mapSlice","name","initialState","highlightedCountries","reducers","toggleCountry","state","action","code","payload","includes","filter","c","push","actions","reducer"],"sources":["C:/Users/sohla/Documents/Web Projects/Travel-Guide/src/redux/mapSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst mapSlice = createSlice({\r\n  name: \"map\",\r\n  initialState: {\r\n    highlightedCountries: [],\r\n  },\r\n  reducers: {\r\n    toggleCountry: (state, action) => {\r\n      const code = action.payload;\r\n      if (state.highlightedCountries.includes(code)) {\r\n        state.highlightedCountries = state.highlightedCountries.filter(\r\n          (c) => c !== code\r\n        );\r\n      } else {\r\n        state.highlightedCountries.push(code);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { toggleCountry } = mapSlice.actions;\r\nexport default mapSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,oBAAoB,EAAE;EACxB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,IAAIH,KAAK,CAACH,oBAAoB,CAACO,QAAQ,CAACF,IAAI,CAAC,EAAE;QAC7CF,KAAK,CAACH,oBAAoB,GAAGG,KAAK,CAACH,oBAAoB,CAACQ,MAAM,CAC3DC,CAAC,IAAKA,CAAC,KAAKJ,IACf,CAAC;MACH,CAAC,MAAM;QACLF,KAAK,CAACH,oBAAoB,CAACU,IAAI,CAACL,IAAI,CAAC;MACvC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAc,CAAC,GAAGL,QAAQ,CAACc,OAAO;AACjD,eAAed,QAAQ,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}